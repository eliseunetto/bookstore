{"version":3,"sources":["./src/app/components/views/livro/livro-read-all/livro-read-all.component.html","./src/app/components/views/livro/livro-read-all/livro-read-all.component.ts","./src/environments/environment.ts","./src/app/components/views/livro/livro-read/livro-read.component.ts","./src/app/components/views/livro/livro-read/livro-read.component.html","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/components/views/home/home.component.ts","./src/app/components/views/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/views/categoria/categoria-create/categoria-create.component.ts","./src/app/components/views/categoria/categoria-create/categoria-create.component.html","./src/app/components/views/livro/livro-update/livro-update.component.ts","./src/app/components/views/livro/livro-update/livro-update.component.html","./src/app/app.module.ts","./src/app/components/views/livro/livro.service.ts","./src/app/components/views/categoria/categoria-delete/categoria-delete.component.ts","./src/app/components/views/categoria/categoria-delete/categoria-delete.component.html","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/views/categoria/categoria-update/categoria-update.component.ts","./src/app/components/views/categoria/categoria-update/categoria-update.component.html","./src/app/components/views/categoria/categoria-read/categoria-read.component.html","./src/app/components/views/categoria/categoria-read/categoria-read.component.ts","./src/app/components/views/livro/livro-create/livro-create.component.ts","./src/app/components/views/livro/livro-create/livro-create.component.html","./src/app/app-routing.module.ts","./src/app/components/views/livro/livro-delete/livro-delete.component.ts","./src/app/components/views/livro/livro-delete/livro-delete.component.html","./src/app/components/views/categoria/categoria.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"content\">\r\n  <div class=\"title\">\r\n    <h1>Livro</h1>\r\n  </div>\r\n\r\n  <button\r\n    (click)=\"navegarParaCriarLivro()\"\r\n    class=\"mat-elevation-z8\"\r\n    mat-stroked-button\r\n    color=\"primary\"\r\n  >\r\n    Novo Livro\r\n  </button>\r\n\r\n  <div class=\"content-table mat-elevation-z8\">\r\n    <table class=\"table\" mat-table [dataSource]=\"livros\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef>ID</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"titulo\">\r\n        <th mat-header-cell *matHeaderCellDef>TÍTULO</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{ row.titulo }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"ler-livro\">\r\n        <th mat-header-cell *matHeaderCellDef>LER LIVRO</th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <a class=\"livros\" routerLink=\"{{ row.id }}/read\">\r\n            <i class=\"material-icons\">book</i>\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"acao\">\r\n        <th class=\"mat-header\" mat-header-cell *matHeaderCellDef>AÇÃO</th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <a class=\"edit\" routerLink=\"{{ row.id }}/update\">\r\n            <i class=\"material-icons\">edit</i>\r\n          </a>\r\n          <a class=\"delete\" routerLink=\"{{ row.id }}/delete\">\r\n            <i class=\"material-icons\">delete</i>\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { CategoriaService } from \"./../../categoria/categoria.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\nimport { LivroService } from \"./../livro.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Categoria } from \"../../categoria/categoria.model\";\r\nimport { Livro } from \"../livro.model\";\r\n\r\n@Component({\r\n  selector: \"app-livro-read-all\",\r\n  templateUrl: \"./livro-read-all.component.html\",\r\n  styleUrls: [\"./livro-read-all.component.css\"],\r\n})\r\nexport class LivroReadAllComponent implements OnInit {\r\n  livros: Livro[] = [];\r\n\r\n  id_cat: String = \"\";\r\n\r\n  constructor(\r\n    private service: LivroService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id_cat = this.route.snapshot.paramMap.get(\"id_cat\")!;\r\n    this.findAllByCategoria();\r\n  }\r\n\r\n  findAllByCategoria(): void {\r\n    this.service.findAllByCategoria(this.id_cat!).subscribe((resposta) => {\r\n      this.livros = resposta;\r\n      console.log(this.livros);\r\n    });\r\n  }\r\n\r\n  navegarParaCriarLivro(): void {\r\n    this.router.navigate([`categorias/${this.id_cat}/livros/create`]);\r\n  }\r\n\r\n  displayedColumns: string[] = [\"id\", \"titulo\", \"ler-livro\", \"acao\"];\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: \"https://bookstore-en.herokuapp.com\",\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LivroService } from \"./../livro.service\";\r\nimport { Livro } from \"./../livro.model\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-livro-read\",\r\n  templateUrl: \"./livro-read.component.html\",\r\n  styleUrls: [\"./livro-read.component.css\"],\r\n})\r\nexport class LivroReadComponent implements OnInit {\r\n  id_cat: String = \"\";\r\n\r\n  livro: Livro = {\r\n    id: \"\",\r\n    titulo: \"\",\r\n    autor: \"\",\r\n    texto: \"\",\r\n  };\r\n\r\n  constructor(\r\n    private service: LivroService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id_cat = this.route.snapshot.paramMap.get(\"id_cat\")!;\r\n    this.livro.id = this.route.snapshot.paramMap.get(\"id\")!;\r\n    this.findById();\r\n  }\r\n\r\n  findById(): void {\r\n    this.service.findById(this.livro.id!).subscribe((response) => {\r\n      this.livro = response;\r\n    });\r\n  }\r\n\r\n  cancelar(): void {\r\n    this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n  }\r\n}\r\n","<form>\r\n  <mat-card class=\"home mat-elevation-z4\">\r\n    <mat-card-title>{{ livro.titulo }}</mat-card-title>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"home mat-elevation-z4\">\r\n    <mat-card-subtitle class=\"subtitle\"\r\n      >por {{ livro.autor }}</mat-card-subtitle\r\n    >\r\n    <button (click)=\"cancelar()\" mat-stroked-button color=\"warn\">\r\n      <mat-icon>keyboard_return</mat-icon>\r\n    </button>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"home mat-elevation-z4\">\r\n    <mat-card-subtitle class=\"subtitle\">{{ livro.texto }}</mat-card-subtitle>\r\n  </mat-card>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"footer\">\r\n    <span>Desenvolvido por <a href=\"#\">eliseunetto</a> </span>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card class=\"home\" mat-elevation-z4>\r\n    <mat-card-title class=\"title\">Bem vindo!</mat-card-title>\r\n    <mat-card-subtitle class=\"subtitle\">Sistema para exemplificar um CRUD usando Angular e Spring Boot</mat-card-subtitle>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'bookstore-frontend';\r\n}\r\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","import { Router } from \"@angular/router\";\r\nimport { Categoria } from \"../categoria.model\";\r\nimport { CategoriaService } from \"./../categoria.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-categoria-create\",\r\n  templateUrl: \"./categoria-create.component.html\",\r\n  styleUrls: [\"./categoria-create.component.css\"],\r\n})\r\nexport class CategoriaCreateComponent implements OnInit {\r\n  categoria: Categoria = {\r\n    nome: \"\",\r\n    descricao: \"\",\r\n  };\r\n\r\n  constructor(private service: CategoriaService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  create(): void {\r\n    this.service.create(this.categoria).subscribe(\r\n      (resposta) => {\r\n        this.router.navigate([\"categorias\"]);\r\n        this.service.message(\"Categoria criada com sucesso!\");\r\n      },\r\n      (err) => {\r\n        for (let i = 0; i < err.error.errors.length; i++) {\r\n          this.service.message(err.error.errors[i].message);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate([\"categorias\"]);\r\n  }\r\n}\r\n","<form>\r\n  <h1>Criando nova categoria</h1>\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Nome</mat-label>\r\n    <input\r\n      [(ngModel)]=\"categoria.nome\"\r\n      matInput\r\n      name=\"nome\"\r\n      placeholder=\"Ex.: Computação\"\r\n    />\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Descrição</mat-label>\r\n    <textarea\r\n      [(ngModel)]=\"categoria.descricao\"\r\n      matInput\r\n      name=\"descricao\"\r\n      placeholder=\"Ex.: Livro de Computação\"\r\n    ></textarea>\r\n  </mat-form-field>\r\n\r\n  <div class=\"buttons\">\r\n    <button\r\n      (click)=\"create()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n    >\r\n      Criar\r\n    </button>\r\n\r\n    <button\r\n      (click)=\"cancel()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"warn\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, Validators } from \"@angular/forms\";\r\nimport { Livro } from \"../livro.model\";\r\nimport { LivroService } from \"../livro.service\";\r\n\r\n@Component({\r\n  selector: \"app-livro-update\",\r\n  templateUrl: \"./livro-update.component.html\",\r\n  styleUrls: [\"./livro-update.component.css\"],\r\n})\r\nexport class LivroUpdateComponent implements OnInit {\r\n  id_cat: String = \"\";\r\n\r\n  livro: Livro = {\r\n    id: \"\",\r\n    titulo: \"\",\r\n    autor: \"\",\r\n    texto: \"\",\r\n  };\r\n\r\n  titulo = new FormControl(\"\", [Validators.minLength(3)]);\r\n  autor = new FormControl(\"\", [Validators.minLength(3)]);\r\n  texto = new FormControl(\"\", [Validators.minLength(10)]);\r\n\r\n  constructor(\r\n    private service: LivroService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id_cat = this.route.snapshot.paramMap.get(\"id_cat\")!;\r\n    this.livro.id = this.route.snapshot.paramMap.get(\"id\")!;\r\n    this.findById();\r\n  }\r\n\r\n  findById(): void {\r\n    this.service.findById(this.livro.id!).subscribe((response) => {\r\n      this.livro = response;\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.service.update(this.livro).subscribe(\r\n      (resposta) => {\r\n        this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n        this.service.message(\"Livro atualizado com sucesso!\");\r\n      },\r\n      (err) => {\r\n        this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n        this.service.message(\"ERRO ao atualizar livro.\");\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelar(): void {\r\n    this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n  }\r\n\r\n  getMessageTitulo() {\r\n    if (this.titulo.invalid) {\r\n      return \"O campo TITULO deve conter entre 3 e 100 caracteres\";\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMessageAutor() {\r\n    if (this.autor.invalid) {\r\n      return \"O campo AUTOR deve conter entre 3 e 100 caracteres\";\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMessageTexto() {\r\n    if (this.texto.invalid) {\r\n      return \"O campo TEXTO deve conter entre 10 e 2.000.000 caracteres\";\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMessageFieldErro() {\r\n    if (\r\n      this.getMessageTitulo() ||\r\n      this.getMessageAutor() ||\r\n      this.getMessageTexto()\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<form>\r\n  <h1>Atualizando Livro</h1>\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Título</mat-label>\r\n    <input\r\n      matInput\r\n      [(ngModel)]=\"livro.titulo\"\r\n      [formControl]=\"titulo\"\r\n      required\r\n      name=\"titulo\"\r\n      placeholder=\"Ex.: Curso Spring Boot com Angular 10\"\r\n      maxlength=\"100\"\r\n    />\r\n    <mat-error *ngIf=\"titulo.invalid\"> {{ getMessageTitulo() }} </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Autor</mat-label>\r\n    <input\r\n      matInput\r\n      [(ngModel)]=\"livro.autor\"\r\n      [formControl]=\"autor\"\r\n      required\r\n      name=\"autor\"\r\n      placeholder=\"Ex.: Eliseu Netto\"\r\n      maxlength=\"100\"\r\n    />\r\n    <mat-error *ngIf=\"autor.invalid\"> {{ getMessageAutor() }} </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Texto</mat-label>\r\n    <textarea\r\n      matInput\r\n      [(ngModel)]=\"livro.texto\"\r\n      [formControl]=\"texto\"\r\n      required\r\n      name=\"texto\"\r\n      placeholder=\"Ex.: Lorem ipsum\"\r\n      maxlength=\"2000000\"\r\n    ></textarea>\r\n    <mat-error *ngIf=\"texto.invalid\"> {{ getMessageTexto() }} </mat-error>\r\n  </mat-form-field>\r\n\r\n  <div class=\"buttons\">\r\n    <button\r\n      [disabled]=\"getMessageFieldErro()\"\r\n      (click)=\"update()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n    >\r\n      Atualizar\r\n    </button>\r\n\r\n    <button\r\n      (click)=\"cancelar()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"warn\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { HeaderComponent } from \"./components/template/header/header.component\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { FooterComponent } from \"./components/template/footer/footer.component\";\r\nimport { NavComponent } from \"./components/template/nav/nav.component\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { HomeComponent } from \"./components/views/home/home.component\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { CategoriaReadComponent } from \"./components/views/categoria/categoria-read/categoria-read.component\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { CategoriaCreateComponent } from \"./components/views/categoria/categoria-create/categoria-create.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { CategoriaDeleteComponent } from \"./components/views/categoria/categoria-delete/categoria-delete.component\";\r\nimport { CategoriaUpdateComponent } from \"./components/views/categoria/categoria-update/categoria-update.component\";\r\nimport { LivroReadAllComponent } from \"./components/views/livro/livro-read-all/livro-read-all.component\";\r\nimport { LivroCreateComponent } from \"./components/views/livro/livro-create/livro-create.component\";\r\nimport { LivroUpdateComponent } from './components/views/livro/livro-update/livro-update.component';\r\nimport { LivroDeleteComponent } from './components/views/livro/livro-delete/livro-delete.component';\r\nimport { LivroReadComponent } from './components/views/livro/livro-read/livro-read.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    CategoriaReadComponent,\r\n    CategoriaCreateComponent,\r\n    CategoriaDeleteComponent,\r\n    CategoriaUpdateComponent,\r\n    LivroReadAllComponent,\r\n    LivroCreateComponent,\r\n    LivroUpdateComponent,\r\n    LivroDeleteComponent,\r\n    LivroReadComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Livro } from \"./livro.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LivroService {\r\n  baseUrl: String = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient, private _snack: MatSnackBar) {}\r\n\r\n  findAllByCategoria(id_cat: String): Observable<Livro[]> {\r\n    const url = `${this.baseUrl}/livros?categoria=${id_cat}`;\r\n    return this.http.get<Livro[]>(url);\r\n  }\r\n\r\n  findById(id: String): Observable<Livro> {\r\n    const url = `${this.baseUrl}/livros/${id}`;\r\n    return this.http.get<Livro>(url);\r\n  }\r\n\r\n  create(livro: Livro, id_cat: String): Observable<Livro> {\r\n    const url = `${this.baseUrl}/livros?categoria=${id_cat}`;\r\n    return this.http.post<Livro>(url, livro);\r\n  }\r\n\r\n  update(livro: Livro): Observable<Livro> {\r\n    const url = `${this.baseUrl}/livros/${livro.id}`;\r\n    return this.http.put<Livro>(url, livro);\r\n  }\r\n\r\n  delete(id: String): Observable<void> {\r\n    const url = `${this.baseUrl}/livros/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  message(msg: String): void {\r\n    this._snack.open(`${msg}`, \"OK\", {\r\n      horizontalPosition: \"end\",\r\n      verticalPosition: \"top\",\r\n      duration: 4000,\r\n    });\r\n  }\r\n}\r\n","import { Categoria } from \"./../categoria.model\";\r\nimport { CategoriaService } from \"./../categoria.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-categoria-delete\",\r\n  templateUrl: \"./categoria-delete.component.html\",\r\n  styleUrls: [\"./categoria-delete.component.css\"],\r\n})\r\nexport class CategoriaDeleteComponent implements OnInit {\r\n  categoria: Categoria = {\r\n    id: \"\",\r\n    nome: \"\",\r\n    descricao: \"\",\r\n  };\r\n\r\n  constructor(\r\n    private service: CategoriaService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.categoria.id = this.route.snapshot.paramMap.get(\"id\")!;\r\n    this.findById();\r\n  }\r\n\r\n  findById(): void {\r\n    this.service.findById(this.categoria.id!).subscribe((resposta) => {\r\n      this.categoria.id = resposta.id;\r\n      this.categoria.nome = resposta.nome;\r\n      this.categoria.descricao = resposta.descricao;\r\n    });\r\n  }\r\n\r\n  delete(): void {\r\n    this.service.delete(this.categoria.id!).subscribe(\r\n      (resposta) => {\r\n        this.router.navigate([\"categorias\"]);\r\n        this.service.message(\"Categoria apagada com sucesso!\");\r\n      },\r\n      (err) => {\r\n        this.service.message(err.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate([\"categorias\"]);\r\n  }\r\n}\r\n","<form>\r\n  <h1>Deletando uma categoria</h1>\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Nome</mat-label>\r\n    <input [(ngModel)]=\"categoria.nome\" matInput name=\"nome\" disabled />\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Descrição</mat-label>\r\n    <textarea\r\n      [(ngModel)]=\"categoria.descricao\"\r\n      matInput\r\n      name=\"descricao\"\r\n      disabled\r\n    ></textarea>\r\n  </mat-form-field>\r\n\r\n  <div class=\"buttons\">\r\n    <button\r\n      (click)=\"delete()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n    >\r\n      Deletar\r\n    </button>\r\n\r\n    <button\r\n      (click)=\"cancel()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"warn\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"container\">\r\n    <mat-sidenav mode=\"side\" opened>\r\n        <mat-nav-list>\r\n            <a routerLink=\"\" mat-list-item>\r\n                <i class=\"material-icons\">home</i>\r\n                Home \r\n            </a>\r\n            <a routerLink=\"/categorias\" mat-list-item>\r\n                <i class=\"material-icons\">menu_book</i>\r\n                Categorias \r\n            </a>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n        <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"header\">\r\n    <span>\r\n        <img src=\"assets/img/book.png\" alt=\"book\">\r\n    </span>\r\n    <span>\r\n        <h1>Bookstore Application</h1>\r\n    </span>\r\n</mat-toolbar>\r\n","import { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CategoriaService } from \"./../categoria.service\";\r\nimport { Categoria } from \"./../categoria.model\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-categoria-update\",\r\n  templateUrl: \"./categoria-update.component.html\",\r\n  styleUrls: [\"./categoria-update.component.css\"],\r\n})\r\nexport class CategoriaUpdateComponent implements OnInit {\r\n  categoria: Categoria = {\r\n    id: \"\",\r\n    nome: \"\",\r\n    descricao: \"\",\r\n  };\r\n\r\n  constructor(\r\n    private service: CategoriaService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.categoria.id = this.route.snapshot.paramMap.get(\"id\")!;\r\n    this.findById();\r\n  }\r\n\r\n  findById(): void {\r\n    this.service.findById(this.categoria.id!).subscribe((resposta) => {\r\n      this.categoria.id = resposta.id;\r\n      this.categoria.nome = resposta.nome;\r\n      this.categoria.descricao = resposta.descricao;\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    this.service.update(this.categoria).subscribe(\r\n      (resposta) => {\r\n        this.router.navigate([\"categorias\"]);\r\n        this.service.message(\"Categoria atualizada com sucesso!\");\r\n      },\r\n      (err) => {\r\n        this.service.message(\r\n          \"Todos os campos devem ser preenchidos! Mínimo 3 caracteres.\"\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.router.navigate([\"categorias\"]);\r\n  }\r\n}\r\n","<form>\r\n  <h1>Atualizando uma categoria</h1>\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Nome</mat-label>\r\n    <input [(ngModel)]=\"categoria.nome\" matInput name=\"nome\" />\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Descrição</mat-label>\r\n    <textarea\r\n      [(ngModel)]=\"categoria.descricao\"\r\n      matInput\r\n      name=\"descricao\"\r\n    ></textarea>\r\n  </mat-form-field>\r\n\r\n  <div class=\"buttons\">\r\n    <button\r\n      (click)=\"update()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n    >\r\n      Atualizar\r\n    </button>\r\n\r\n    <button\r\n      (click)=\"cancel()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"warn\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n  </div>\r\n</form>\r\n","<div class=\"content\">\r\n  <div class=\"title\">\r\n    <h1>Categoria</h1>\r\n  </div>\r\n\r\n  <button\r\n    class=\"mat-elevation-z8\"\r\n    (click)=\"navegarParaCategoriaCriate()\"\r\n    mat-stroked-button\r\n    color=\"primary\"\r\n  >\r\n    Nova Categoria\r\n  </button>\r\n\r\n  <div class=\"content-table mat-elevation-z8\">\r\n    <table class=\"table\" mat-table [dataSource]=\"categorias\">\r\n      <!-- Position Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <th mat-header-cell *matHeaderCellDef>ID</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"nome\">\r\n        <th mat-header-cell *matHeaderCellDef>NOME</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{ row.nome }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"descricao\">\r\n        <th mat-header-cell *matHeaderCellDef>DESCRIÇÃO</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{ row.descricao }}</td>\r\n      </ng-container>\r\n\r\n      <!-- Weight Column -->\r\n      <ng-container matColumnDef=\"livros\">\r\n        <th mat-header-cell *matHeaderCellDef>LIVROS</th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <a routerLink=\"{{ row.id }}/livros\">\r\n            <i class=\"livros material-icons\">book</i>\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <!-- Symbol Column -->\r\n      <ng-container matColumnDef=\"acao\">\r\n        <th class=\"mat-header\" mat-header-cell *matHeaderCellDef>AÇÃO</th>\r\n        <td mat-cell *matCellDef=\"let row\">\r\n          <a class=\"edit\" routerLink=\"update/{{ row.id }}\">\r\n            <i class=\"material-icons\">edit</i>\r\n          </a>\r\n          <a class=\"delete\" routerLink=\"delete/{{ row.id }}\">\r\n            <i class=\"material-icons\">delete</i>\r\n          </a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Categoria } from \"../categoria.model\";\r\nimport { CategoriaService } from \"./../categoria.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-categoria-read\",\r\n  templateUrl: \"./categoria-read.component.html\",\r\n  styleUrls: [\"./categoria-read.component.css\"],\r\n})\r\nexport class CategoriaReadComponent implements OnInit {\r\n  categorias: Categoria[] = [];\r\n\r\n  constructor(private service: CategoriaService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.findAll();\r\n  }\r\n\r\n  findAll() {\r\n    this.service.findAll().subscribe((resposta) => {\r\n      this.categorias = resposta;\r\n    });\r\n  }\r\n\r\n  navegarParaCategoriaCriate() {\r\n    this.router.navigate([\"categorias/create\"]);\r\n  }\r\n\r\n  displayedColumns: string[] = [\"id\", \"nome\", \"descricao\", \"livros\", \"acao\"];\r\n}\r\n","import { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, Validators } from \"@angular/forms\";\r\nimport { LivroService } from \"../livro.service\";\r\nimport { Livro } from \"../livro.model\";\r\n\r\n@Component({\r\n  selector: \"app-livro-create\",\r\n  templateUrl: \"./livro-create.component.html\",\r\n  styleUrls: [\"./livro-create.component.css\"],\r\n})\r\nexport class LivroCreateComponent implements OnInit {\r\n  id_cat: String = \"\";\r\n\r\n  livro: Livro = {\r\n    id: \"\",\r\n    titulo: \"\",\r\n    autor: \"\",\r\n    texto: \"\",\r\n  };\r\n\r\n  titulo = new FormControl(\"\", [Validators.minLength(3)]);\r\n  autor = new FormControl(\"\", [Validators.minLength(3)]);\r\n  texto = new FormControl(\"\", [Validators.minLength(10)]);\r\n\r\n  constructor(\r\n    private service: LivroService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id_cat = this.route.snapshot.paramMap.get(\"id_cat\")!;\r\n  }\r\n\r\n  create(): void {\r\n    this.service.create(this.livro, this.id_cat).subscribe(\r\n      (resposta) => {\r\n        this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n        this.service.message(\"Livro criado com sucesso!\");\r\n      },\r\n      (err) => {\r\n        this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n        this.service.message(\"ERRO ao tentar criar Livro.\");\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelar(): void {\r\n    this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n  }\r\n\r\n  getMessageTitulo() {\r\n    if (this.titulo.invalid) {\r\n      return \"O campo TITULO deve conter entre 3 e 100 caracteres\";\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMessageAutor() {\r\n    if (this.autor.invalid) {\r\n      return \"O campo AUTOR deve conter entre 3 e 100 caracteres\";\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMessageTexto() {\r\n    if (this.texto.invalid) {\r\n      return \"O campo TEXTO deve conter entre 10 e 2.000.000 caracteres\";\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMessageFieldErro() {\r\n    if (\r\n      this.getMessageTitulo() ||\r\n      this.getMessageAutor() ||\r\n      this.getMessageTexto()\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<form>\r\n  <h1>Criando um novo Livro</h1>\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Título</mat-label>\r\n    <input\r\n      matInput\r\n      [(ngModel)]=\"livro.titulo\"\r\n      [formControl]=\"titulo\"\r\n      required\r\n      name=\"titulo\"\r\n      placeholder=\"Ex.: Curso Spring Boot com Angular 10\"\r\n      maxlength=\"100\"\r\n    />\r\n    <mat-error *ngIf=\"titulo.invalid\"> {{ getMessageTitulo() }} </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Autor</mat-label>\r\n    <input\r\n      matInput\r\n      [(ngModel)]=\"livro.autor\"\r\n      [formControl]=\"autor\"\r\n      required\r\n      name=\"autor\"\r\n      placeholder=\"Ex.: Eliseu Netto\"\r\n      maxlength=\"100\"\r\n    />\r\n    <mat-error *ngIf=\"autor.invalid\"> {{ getMessageAutor() }} </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Texto</mat-label>\r\n    <textarea\r\n      matInput\r\n      [(ngModel)]=\"livro.texto\"\r\n      [formControl]=\"texto\"\r\n      required\r\n      name=\"texto\"\r\n      placeholder=\"Ex.: Lorem ipsum\"\r\n      maxlength=\"2000000\"\r\n    ></textarea>\r\n    <mat-error *ngIf=\"texto.invalid\"> {{ getMessageTexto() }} </mat-error>\r\n  </mat-form-field>\r\n\r\n  <div class=\"buttons\">\r\n    <button\r\n      [disabled]=\"getMessageFieldErro()\"\r\n      (click)=\"create()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n    >\r\n      Criar\r\n    </button>\r\n\r\n    <button\r\n      (click)=\"cancelar()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"warn\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { LivroReadComponent } from \"./components/views/livro/livro-read/livro-read.component\";\r\nimport { LivroUpdateComponent } from \"./components/views/livro/livro-update/livro-update.component\";\r\nimport { LivroCreateComponent } from \"./components/views/livro/livro-create/livro-create.component\";\r\nimport { LivroReadAllComponent } from \"./components/views/livro/livro-read-all/livro-read-all.component\";\r\nimport { CategoriaUpdateComponent } from \"./components/views/categoria/categoria-update/categoria-update.component\";\r\nimport { CategoriaDeleteComponent } from \"./components/views/categoria/categoria-delete/categoria-delete.component\";\r\nimport { CategoriaCreateComponent } from \"./components/views/categoria/categoria-create/categoria-create.component\";\r\nimport { CategoriaReadComponent } from \"./components/views/categoria/categoria-read/categoria-read.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HomeComponent } from \"./components/views/home/home.component\";\r\nimport { LivroDeleteComponent } from \"./components/views/livro/livro-delete/livro-delete.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: \"categorias\",\r\n    component: CategoriaReadComponent,\r\n  },\r\n  {\r\n    path: \"categorias/create\",\r\n    component: CategoriaCreateComponent,\r\n  },\r\n  {\r\n    path: \"categorias/delete/:id\",\r\n    component: CategoriaDeleteComponent,\r\n  },\r\n  {\r\n    path: \"categorias/update/:id\",\r\n    component: CategoriaUpdateComponent,\r\n  },\r\n  {\r\n    path: \"categorias/:id_cat/livros\",\r\n    component: LivroReadAllComponent,\r\n  },\r\n  {\r\n    path: \"categorias/:id_cat/livros/create\",\r\n    component: LivroCreateComponent,\r\n  },\r\n  {\r\n    path: \"categorias/:id_cat/livros/:id/update\",\r\n    component: LivroUpdateComponent,\r\n  },\r\n  {\r\n    path: \"categorias/:id_cat/livros/:id/delete\",\r\n    component: LivroDeleteComponent,\r\n  },\r\n  {\r\n    path: \"categorias/:id_cat/livros/:id/read\",\r\n    component: LivroReadComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LivroService } from \"./../livro.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Livro } from \"../livro.model\";\r\n\r\n@Component({\r\n  selector: \"app-livro-delete\",\r\n  templateUrl: \"./livro-delete.component.html\",\r\n  styleUrls: [\"./livro-delete.component.css\"],\r\n})\r\nexport class LivroDeleteComponent implements OnInit {\r\n  id_cat: String = \"\";\r\n\r\n  livro: Livro = {\r\n    id: \"\",\r\n    titulo: \"\",\r\n    autor: \"\",\r\n    texto: \"\",\r\n  };\r\n\r\n  constructor(\r\n    private service: LivroService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id_cat = this.route.snapshot.paramMap.get(\"id_cat\")!;\r\n    this.livro.id = this.route.snapshot.paramMap.get(\"id\")!;\r\n    this.findById();\r\n  }\r\n\r\n  findById(): void {\r\n    this.service.findById(this.livro.id!).subscribe((response) => {\r\n      this.livro = response;\r\n    });\r\n  }\r\n\r\n  delete(): void {\r\n    this.service.delete(this.livro.id!).subscribe(\r\n      (resposta) => {\r\n        this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n        this.service.message(\"Livro apagado com sucesso!\");\r\n      },\r\n      (err) => {\r\n        this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n        this.service.message(\"ERRO ao apagar o Livro\");\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelar(): void {\r\n    this.router.navigate([`categorias/${this.id_cat}/livros`]);\r\n  }\r\n}\r\n","<form>\r\n  <h1>Apagar Livro</h1>\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Título</mat-label>\r\n    <input matInput [(ngModel)]=\"livro.titulo\" name=\"titulo\" disabled />\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Autor</mat-label>\r\n    <input matInput [(ngModel)]=\"livro.autor\" name=\"autor\" disabled />\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"campoDoFormulario\">\r\n    <mat-label>Texto</mat-label>\r\n    <textarea\r\n      matInput\r\n      [(ngModel)]=\"livro.texto\"\r\n      name=\"texto\"\r\n      disabled\r\n    ></textarea>\r\n  </mat-form-field>\r\n\r\n  <div class=\"buttons\">\r\n    <button\r\n      (click)=\"delete()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n    >\r\n      Apagar\r\n    </button>\r\n\r\n    <button\r\n      (click)=\"cancelar()\"\r\n      class=\"mat-elevation-z8\"\r\n      mat-stroked-button\r\n      color=\"warn\"\r\n    >\r\n      Cancelar\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Categoria } from \"./categoria.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CategoriaService {\r\n  baseUrl: String = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient, private _snack: MatSnackBar) {}\r\n\r\n  findAll(): Observable<Categoria[]> {\r\n    const url = `${this.baseUrl}/categorias`;\r\n    return this.http.get<Categoria[]>(url);\r\n  }\r\n\r\n  findById(id: String): Observable<Categoria> {\r\n    const url = `${this.baseUrl}/categorias/${id}`;\r\n    return this.http.get<Categoria>(url);\r\n  }\r\n\r\n  create(categoria: Categoria): Observable<Categoria> {\r\n    const url = `${this.baseUrl}/categorias`;\r\n    return this.http.post<Categoria>(url, categoria);\r\n  }\r\n\r\n  delete(id: String): Observable<void> {\r\n    const url = `${this.baseUrl}/categorias/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  update(categoria: Categoria): Observable<Categoria> {\r\n    const url = `${this.baseUrl}/categorias/${categoria.id}`;\r\n    return this.http.put<Categoria>(url, categoria);\r\n  }\r\n\r\n  message(msg: String): void {\r\n    this._snack.open(`${msg}`, \"OK\", {\r\n      horizontalPosition: \"end\",\r\n      verticalPosition: \"top\",\r\n      duration: 4000,\r\n    });\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}